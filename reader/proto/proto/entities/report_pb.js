// source: proto/entities/report.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var proto_entities_cycle_pb = require('../../proto/entities/cycle_pb.js');
goog.object.extend(proto, proto_entities_cycle_pb);
var proto_entities_truck_pb = require('../../proto/entities/truck_pb.js');
goog.object.extend(proto, proto_entities_truck_pb);
var proto_entities_excavator_pb = require('../../proto/entities/excavator_pb.js');
goog.object.extend(proto, proto_entities_excavator_pb);
goog.exportSymbol('proto.pb.ExcavatorReport', null, global);
goog.exportSymbol('proto.pb.ExcavatorTonneHour', null, global);
goog.exportSymbol('proto.pb.ReportPerformancePerHour', null, global);
goog.exportSymbol('proto.pb.TruckReport', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.TruckReport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.TruckReport.repeatedFields_, null);
};
goog.inherits(proto.pb.TruckReport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.TruckReport.displayName = 'proto.pb.TruckReport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ExcavatorReport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.ExcavatorReport.repeatedFields_, null);
};
goog.inherits(proto.pb.ExcavatorReport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ExcavatorReport.displayName = 'proto.pb.ExcavatorReport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ReportPerformancePerHour = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.ReportPerformancePerHour.repeatedFields_, null);
};
goog.inherits(proto.pb.ReportPerformancePerHour, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ReportPerformancePerHour.displayName = 'proto.pb.ReportPerformancePerHour';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.ExcavatorTonneHour = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.ExcavatorTonneHour.repeatedFields_, null);
};
goog.inherits(proto.pb.ExcavatorTonneHour, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.ExcavatorTonneHour.displayName = 'proto.pb.ExcavatorTonneHour';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.TruckReport.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.TruckReport.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.TruckReport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.TruckReport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TruckReport.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    truck: (f = msg.getTruck()) && proto_entities_truck_pb.Truck.toObject(includeInstance, f),
    cycleList: jspb.Message.toObjectList(msg.getCycleList(),
    proto_entities_cycle_pb.Cycle.toObject, includeInstance),
    lenDme: jspb.Message.getFieldWithDefault(msg, 6, 0),
    lenPad: jspb.Message.getFieldWithDefault(msg, 7, 0),
    lenStock: jspb.Message.getFieldWithDefault(msg, 8, 0),
    len: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.TruckReport}
 */
proto.pb.TruckReport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.TruckReport;
  return proto.pb.TruckReport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.TruckReport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.TruckReport}
 */
proto.pb.TruckReport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 4:
      var value = new proto_entities_truck_pb.Truck;
      reader.readMessage(value,proto_entities_truck_pb.Truck.deserializeBinaryFromReader);
      msg.setTruck(value);
      break;
    case 5:
      var value = new proto_entities_cycle_pb.Cycle;
      reader.readMessage(value,proto_entities_cycle_pb.Cycle.deserializeBinaryFromReader);
      msg.addCycle(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLenDme(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLenPad(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLenStock(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.TruckReport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.TruckReport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.TruckReport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TruckReport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTruck();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto_entities_truck_pb.Truck.serializeBinaryToWriter
    );
  }
  f = message.getCycleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto_entities_cycle_pb.Cycle.serializeBinaryToWriter
    );
  }
  f = message.getLenDme();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getLenPad();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getLenStock();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getLen();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pb.TruckReport.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.TruckReport} returns this
 */
proto.pb.TruckReport.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string device_id = 2;
 * @return {string}
 */
proto.pb.TruckReport.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.TruckReport} returns this
 */
proto.pb.TruckReport.prototype.setDeviceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Truck truck = 4;
 * @return {?proto.pb.Truck}
 */
proto.pb.TruckReport.prototype.getTruck = function() {
  return /** @type{?proto.pb.Truck} */ (
    jspb.Message.getWrapperField(this, proto_entities_truck_pb.Truck, 4));
};


/**
 * @param {?proto.pb.Truck|undefined} value
 * @return {!proto.pb.TruckReport} returns this
*/
proto.pb.TruckReport.prototype.setTruck = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.TruckReport} returns this
 */
proto.pb.TruckReport.prototype.clearTruck = function() {
  return this.setTruck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.TruckReport.prototype.hasTruck = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Cycle cycle = 5;
 * @return {!Array<!proto.pb.Cycle>}
 */
proto.pb.TruckReport.prototype.getCycleList = function() {
  return /** @type{!Array<!proto.pb.Cycle>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_entities_cycle_pb.Cycle, 5));
};


/**
 * @param {!Array<!proto.pb.Cycle>} value
 * @return {!proto.pb.TruckReport} returns this
*/
proto.pb.TruckReport.prototype.setCycleList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.pb.Cycle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Cycle}
 */
proto.pb.TruckReport.prototype.addCycle = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.pb.Cycle, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.TruckReport} returns this
 */
proto.pb.TruckReport.prototype.clearCycleList = function() {
  return this.setCycleList([]);
};


/**
 * optional int32 len_dme = 6;
 * @return {number}
 */
proto.pb.TruckReport.prototype.getLenDme = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.TruckReport} returns this
 */
proto.pb.TruckReport.prototype.setLenDme = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 len_pad = 7;
 * @return {number}
 */
proto.pb.TruckReport.prototype.getLenPad = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.TruckReport} returns this
 */
proto.pb.TruckReport.prototype.setLenPad = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 len_stock = 8;
 * @return {number}
 */
proto.pb.TruckReport.prototype.getLenStock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.TruckReport} returns this
 */
proto.pb.TruckReport.prototype.setLenStock = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 len = 9;
 * @return {number}
 */
proto.pb.TruckReport.prototype.getLen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.TruckReport} returns this
 */
proto.pb.TruckReport.prototype.setLen = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.ExcavatorReport.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ExcavatorReport.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ExcavatorReport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ExcavatorReport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ExcavatorReport.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    excavator: (f = msg.getExcavator()) && proto_entities_excavator_pb.Excavator.toObject(includeInstance, f),
    cycleList: jspb.Message.toObjectList(msg.getCycleList(),
    proto_entities_cycle_pb.Cycle.toObject, includeInstance),
    lenDme: jspb.Message.getFieldWithDefault(msg, 6, 0),
    lenPad: jspb.Message.getFieldWithDefault(msg, 7, 0),
    lenStock: jspb.Message.getFieldWithDefault(msg, 8, 0),
    len: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ExcavatorReport}
 */
proto.pb.ExcavatorReport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ExcavatorReport;
  return proto.pb.ExcavatorReport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ExcavatorReport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ExcavatorReport}
 */
proto.pb.ExcavatorReport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 4:
      var value = new proto_entities_excavator_pb.Excavator;
      reader.readMessage(value,proto_entities_excavator_pb.Excavator.deserializeBinaryFromReader);
      msg.setExcavator(value);
      break;
    case 5:
      var value = new proto_entities_cycle_pb.Cycle;
      reader.readMessage(value,proto_entities_cycle_pb.Cycle.deserializeBinaryFromReader);
      msg.addCycle(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLenDme(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLenPad(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLenStock(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ExcavatorReport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ExcavatorReport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ExcavatorReport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ExcavatorReport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExcavator();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto_entities_excavator_pb.Excavator.serializeBinaryToWriter
    );
  }
  f = message.getCycleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto_entities_cycle_pb.Cycle.serializeBinaryToWriter
    );
  }
  f = message.getLenDme();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getLenPad();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getLenStock();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getLen();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pb.ExcavatorReport.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.ExcavatorReport} returns this
 */
proto.pb.ExcavatorReport.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string device_id = 2;
 * @return {string}
 */
proto.pb.ExcavatorReport.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.ExcavatorReport} returns this
 */
proto.pb.ExcavatorReport.prototype.setDeviceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Excavator excavator = 4;
 * @return {?proto.pb.Excavator}
 */
proto.pb.ExcavatorReport.prototype.getExcavator = function() {
  return /** @type{?proto.pb.Excavator} */ (
    jspb.Message.getWrapperField(this, proto_entities_excavator_pb.Excavator, 4));
};


/**
 * @param {?proto.pb.Excavator|undefined} value
 * @return {!proto.pb.ExcavatorReport} returns this
*/
proto.pb.ExcavatorReport.prototype.setExcavator = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.ExcavatorReport} returns this
 */
proto.pb.ExcavatorReport.prototype.clearExcavator = function() {
  return this.setExcavator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.ExcavatorReport.prototype.hasExcavator = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Cycle cycle = 5;
 * @return {!Array<!proto.pb.Cycle>}
 */
proto.pb.ExcavatorReport.prototype.getCycleList = function() {
  return /** @type{!Array<!proto.pb.Cycle>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_entities_cycle_pb.Cycle, 5));
};


/**
 * @param {!Array<!proto.pb.Cycle>} value
 * @return {!proto.pb.ExcavatorReport} returns this
*/
proto.pb.ExcavatorReport.prototype.setCycleList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.pb.Cycle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Cycle}
 */
proto.pb.ExcavatorReport.prototype.addCycle = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.pb.Cycle, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.ExcavatorReport} returns this
 */
proto.pb.ExcavatorReport.prototype.clearCycleList = function() {
  return this.setCycleList([]);
};


/**
 * optional int32 len_dme = 6;
 * @return {number}
 */
proto.pb.ExcavatorReport.prototype.getLenDme = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.ExcavatorReport} returns this
 */
proto.pb.ExcavatorReport.prototype.setLenDme = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 len_pad = 7;
 * @return {number}
 */
proto.pb.ExcavatorReport.prototype.getLenPad = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.ExcavatorReport} returns this
 */
proto.pb.ExcavatorReport.prototype.setLenPad = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 len_stock = 8;
 * @return {number}
 */
proto.pb.ExcavatorReport.prototype.getLenStock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.ExcavatorReport} returns this
 */
proto.pb.ExcavatorReport.prototype.setLenStock = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 len = 9;
 * @return {number}
 */
proto.pb.ExcavatorReport.prototype.getLen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.ExcavatorReport} returns this
 */
proto.pb.ExcavatorReport.prototype.setLen = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.ReportPerformancePerHour.repeatedFields_ = [1,2,3,4,5,6,7,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ReportPerformancePerHour.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ReportPerformancePerHour.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ReportPerformancePerHour} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ReportPerformancePerHour.toObject = function(includeInstance, msg) {
  var f, obj = {
    hourList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    dmeList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    padList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    stockList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    lenTruckList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    truckCycleList: jspb.Message.toObjectList(msg.getTruckCycleList(),
    proto.pb.TruckReport.toObject, includeInstance),
    excavatorLabelCycleList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    excavatorValueCycleList: jspb.Message.toObjectList(msg.getExcavatorValueCycleList(),
    proto.pb.ExcavatorTonneHour.toObject, includeInstance),
    excavatorCycleList: jspb.Message.toObjectList(msg.getExcavatorCycleList(),
    proto.pb.ExcavatorReport.toObject, includeInstance),
    lenCycleDme: jspb.Message.getFieldWithDefault(msg, 10, 0),
    lenCyclePad: jspb.Message.getFieldWithDefault(msg, 11, 0),
    lenCycleStock: jspb.Message.getFieldWithDefault(msg, 12, 0),
    lenCycle: jspb.Message.getFieldWithDefault(msg, 13, 0),
    tonnePerTruck: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ReportPerformancePerHour}
 */
proto.pb.ReportPerformancePerHour.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ReportPerformancePerHour;
  return proto.pb.ReportPerformancePerHour.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ReportPerformancePerHour} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ReportPerformancePerHour}
 */
proto.pb.ReportPerformancePerHour.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addHour(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setDmeList(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setPadList(value);
      break;
    case 4:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setStockList(value);
      break;
    case 5:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setLenTruckList(value);
      break;
    case 6:
      var value = new proto.pb.TruckReport;
      reader.readMessage(value,proto.pb.TruckReport.deserializeBinaryFromReader);
      msg.addTruckCycle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addExcavatorLabelCycle(value);
      break;
    case 8:
      var value = new proto.pb.ExcavatorTonneHour;
      reader.readMessage(value,proto.pb.ExcavatorTonneHour.deserializeBinaryFromReader);
      msg.addExcavatorValueCycle(value);
      break;
    case 9:
      var value = new proto.pb.ExcavatorReport;
      reader.readMessage(value,proto.pb.ExcavatorReport.deserializeBinaryFromReader);
      msg.addExcavatorCycle(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLenCycleDme(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLenCyclePad(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLenCycleStock(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLenCycle(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTonnePerTruck(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ReportPerformancePerHour.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ReportPerformancePerHour.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ReportPerformancePerHour} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ReportPerformancePerHour.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHourList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getDmeList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
  f = message.getPadList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getStockList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getLenTruckList();
  if (f.length > 0) {
    writer.writePackedInt32(
      5,
      f
    );
  }
  f = message.getTruckCycleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.pb.TruckReport.serializeBinaryToWriter
    );
  }
  f = message.getExcavatorLabelCycleList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getExcavatorValueCycleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.pb.ExcavatorTonneHour.serializeBinaryToWriter
    );
  }
  f = message.getExcavatorCycleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.pb.ExcavatorReport.serializeBinaryToWriter
    );
  }
  f = message.getLenCycleDme();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getLenCyclePad();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getLenCycleStock();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getLenCycle();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getTonnePerTruck();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
};


/**
 * repeated string hour = 1;
 * @return {!Array<string>}
 */
proto.pb.ReportPerformancePerHour.prototype.getHourList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.setHourList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.addHour = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.clearHourList = function() {
  return this.setHourList([]);
};


/**
 * repeated int32 dme = 2;
 * @return {!Array<number>}
 */
proto.pb.ReportPerformancePerHour.prototype.getDmeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.setDmeList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.addDme = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.clearDmeList = function() {
  return this.setDmeList([]);
};


/**
 * repeated int32 pad = 3;
 * @return {!Array<number>}
 */
proto.pb.ReportPerformancePerHour.prototype.getPadList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.setPadList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.addPad = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.clearPadList = function() {
  return this.setPadList([]);
};


/**
 * repeated int32 stock = 4;
 * @return {!Array<number>}
 */
proto.pb.ReportPerformancePerHour.prototype.getStockList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.setStockList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.addStock = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.clearStockList = function() {
  return this.setStockList([]);
};


/**
 * repeated int32 len_truck = 5;
 * @return {!Array<number>}
 */
proto.pb.ReportPerformancePerHour.prototype.getLenTruckList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.setLenTruckList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.addLenTruck = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.clearLenTruckList = function() {
  return this.setLenTruckList([]);
};


/**
 * repeated TruckReport truck_cycle = 6;
 * @return {!Array<!proto.pb.TruckReport>}
 */
proto.pb.ReportPerformancePerHour.prototype.getTruckCycleList = function() {
  return /** @type{!Array<!proto.pb.TruckReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.TruckReport, 6));
};


/**
 * @param {!Array<!proto.pb.TruckReport>} value
 * @return {!proto.pb.ReportPerformancePerHour} returns this
*/
proto.pb.ReportPerformancePerHour.prototype.setTruckCycleList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.pb.TruckReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.TruckReport}
 */
proto.pb.ReportPerformancePerHour.prototype.addTruckCycle = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.pb.TruckReport, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.clearTruckCycleList = function() {
  return this.setTruckCycleList([]);
};


/**
 * repeated string excavator_label_cycle = 7;
 * @return {!Array<string>}
 */
proto.pb.ReportPerformancePerHour.prototype.getExcavatorLabelCycleList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.setExcavatorLabelCycleList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.addExcavatorLabelCycle = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.clearExcavatorLabelCycleList = function() {
  return this.setExcavatorLabelCycleList([]);
};


/**
 * repeated ExcavatorTonneHour excavator_value_cycle = 8;
 * @return {!Array<!proto.pb.ExcavatorTonneHour>}
 */
proto.pb.ReportPerformancePerHour.prototype.getExcavatorValueCycleList = function() {
  return /** @type{!Array<!proto.pb.ExcavatorTonneHour>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.ExcavatorTonneHour, 8));
};


/**
 * @param {!Array<!proto.pb.ExcavatorTonneHour>} value
 * @return {!proto.pb.ReportPerformancePerHour} returns this
*/
proto.pb.ReportPerformancePerHour.prototype.setExcavatorValueCycleList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.pb.ExcavatorTonneHour=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.ExcavatorTonneHour}
 */
proto.pb.ReportPerformancePerHour.prototype.addExcavatorValueCycle = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.pb.ExcavatorTonneHour, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.clearExcavatorValueCycleList = function() {
  return this.setExcavatorValueCycleList([]);
};


/**
 * repeated ExcavatorReport excavator_cycle = 9;
 * @return {!Array<!proto.pb.ExcavatorReport>}
 */
proto.pb.ReportPerformancePerHour.prototype.getExcavatorCycleList = function() {
  return /** @type{!Array<!proto.pb.ExcavatorReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.ExcavatorReport, 9));
};


/**
 * @param {!Array<!proto.pb.ExcavatorReport>} value
 * @return {!proto.pb.ReportPerformancePerHour} returns this
*/
proto.pb.ReportPerformancePerHour.prototype.setExcavatorCycleList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.pb.ExcavatorReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.ExcavatorReport}
 */
proto.pb.ReportPerformancePerHour.prototype.addExcavatorCycle = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.pb.ExcavatorReport, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.clearExcavatorCycleList = function() {
  return this.setExcavatorCycleList([]);
};


/**
 * optional int32 len_cycle_dme = 10;
 * @return {number}
 */
proto.pb.ReportPerformancePerHour.prototype.getLenCycleDme = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.setLenCycleDme = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 len_cycle_pad = 11;
 * @return {number}
 */
proto.pb.ReportPerformancePerHour.prototype.getLenCyclePad = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.setLenCyclePad = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 len_cycle_stock = 12;
 * @return {number}
 */
proto.pb.ReportPerformancePerHour.prototype.getLenCycleStock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.setLenCycleStock = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 len_cycle = 13;
 * @return {number}
 */
proto.pb.ReportPerformancePerHour.prototype.getLenCycle = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.setLenCycle = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 tonne_per_truck = 14;
 * @return {number}
 */
proto.pb.ReportPerformancePerHour.prototype.getTonnePerTruck = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.ReportPerformancePerHour} returns this
 */
proto.pb.ReportPerformancePerHour.prototype.setTonnePerTruck = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.ExcavatorTonneHour.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.ExcavatorTonneHour.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.ExcavatorTonneHour.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.ExcavatorTonneHour} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ExcavatorTonneHour.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    deviceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deviceAlias: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.ExcavatorTonneHour}
 */
proto.pb.ExcavatorTonneHour.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.ExcavatorTonneHour;
  return proto.pb.ExcavatorTonneHour.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.ExcavatorTonneHour} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.ExcavatorTonneHour}
 */
proto.pb.ExcavatorTonneHour.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setValueList(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceAlias(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.ExcavatorTonneHour.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.ExcavatorTonneHour.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.ExcavatorTonneHour} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.ExcavatorTonneHour.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeviceAlias();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated int32 value = 1;
 * @return {!Array<number>}
 */
proto.pb.ExcavatorTonneHour.prototype.getValueList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pb.ExcavatorTonneHour} returns this
 */
proto.pb.ExcavatorTonneHour.prototype.setValueList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pb.ExcavatorTonneHour} returns this
 */
proto.pb.ExcavatorTonneHour.prototype.addValue = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.ExcavatorTonneHour} returns this
 */
proto.pb.ExcavatorTonneHour.prototype.clearValueList = function() {
  return this.setValueList([]);
};


/**
 * optional string device_id = 2;
 * @return {string}
 */
proto.pb.ExcavatorTonneHour.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.ExcavatorTonneHour} returns this
 */
proto.pb.ExcavatorTonneHour.prototype.setDeviceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string device_alias = 3;
 * @return {string}
 */
proto.pb.ExcavatorTonneHour.prototype.getDeviceAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.ExcavatorTonneHour} returns this
 */
proto.pb.ExcavatorTonneHour.prototype.setDeviceAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.pb);
