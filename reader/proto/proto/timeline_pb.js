// source: proto/timeline.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var proto_cycle_pb = require('../proto/cycle_pb.js');
goog.object.extend(proto, proto_cycle_pb);
var proto_unit_pb = require('../proto/unit_pb.js');
goog.object.extend(proto, proto_unit_pb);
goog.exportSymbol('proto.pb.StateUnitGeneral', null, global);
goog.exportSymbol('proto.pb.Timeline', null, global);
goog.exportSymbol('proto.pb.Timeline.StateTimeline', null, global);
goog.exportSymbol('proto.pb.TimelineFinalizeShiftRequest', null, global);
goog.exportSymbol('proto.pb.TimelineListRequest', null, global);
goog.exportSymbol('proto.pb.TimelineListResponse', null, global);
goog.exportSymbol('proto.pb.TimelineRequest', null, global);
goog.exportSymbol('proto.pb.TimelineResponse', null, global);
goog.exportSymbol('proto.pb.TimelinesShiftRequest', null, global);
goog.exportSymbol('proto.pb.TimelinesShiftResponse', null, global);
goog.exportSymbol('proto.pb.UnitCurrentTimeline', null, global);
goog.exportSymbol('proto.pb.UnitFinalize', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Timeline = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.Timeline, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.Timeline.displayName = 'proto.pb.Timeline';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.UnitCurrentTimeline = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.UnitCurrentTimeline.repeatedFields_, null);
};
goog.inherits(proto.pb.UnitCurrentTimeline, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.UnitCurrentTimeline.displayName = 'proto.pb.UnitCurrentTimeline';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.UnitFinalize = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.UnitFinalize, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.UnitFinalize.displayName = 'proto.pb.UnitFinalize';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.TimelineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.TimelineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.TimelineRequest.displayName = 'proto.pb.TimelineRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.TimelineListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.TimelineListRequest.repeatedFields_, null);
};
goog.inherits(proto.pb.TimelineListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.TimelineListRequest.displayName = 'proto.pb.TimelineListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.TimelinesShiftRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.TimelinesShiftRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.TimelinesShiftRequest.displayName = 'proto.pb.TimelinesShiftRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.TimelineFinalizeShiftRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.TimelineFinalizeShiftRequest.repeatedFields_, null);
};
goog.inherits(proto.pb.TimelineFinalizeShiftRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.TimelineFinalizeShiftRequest.displayName = 'proto.pb.TimelineFinalizeShiftRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.TimelineResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.TimelineResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.TimelineResponse.displayName = 'proto.pb.TimelineResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.TimelineListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.TimelineListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.TimelineListResponse.displayName = 'proto.pb.TimelineListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.TimelinesShiftResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.TimelinesShiftResponse.repeatedFields_, null);
};
goog.inherits(proto.pb.TimelinesShiftResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.TimelinesShiftResponse.displayName = 'proto.pb.TimelinesShiftResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Timeline.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Timeline.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Timeline} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Timeline.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deviceAlias: jspb.Message.getFieldWithDefault(msg, 3, ""),
    initialHourmeter: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    finalHourmeter: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    initialState: jspb.Message.getFieldWithDefault(msg, 6, 0),
    finalState: jspb.Message.getFieldWithDefault(msg, 7, 0),
    initialTime: (f = msg.getInitialTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    finalTime: (f = msg.getFinalTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    durationTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    shiftDate: (f = msg.getShiftDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    shift: jspb.Message.getFieldWithDefault(msg, 12, 0),
    stateRegister: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Timeline}
 */
proto.pb.Timeline.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Timeline;
  return proto.pb.Timeline.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Timeline} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Timeline}
 */
proto.pb.Timeline.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceAlias(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setInitialHourmeter(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFinalHourmeter(value);
      break;
    case 6:
      var value = /** @type {!proto.pb.StateUnitGeneral} */ (reader.readEnum());
      msg.setInitialState(value);
      break;
    case 7:
      var value = /** @type {!proto.pb.StateUnitGeneral} */ (reader.readEnum());
      msg.setFinalState(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setInitialTime(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFinalTime(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDurationTime(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setShiftDate(value);
      break;
    case 12:
      var value = /** @type {!proto.pb.Shift} */ (reader.readEnum());
      msg.setShift(value);
      break;
    case 13:
      var value = /** @type {!proto.pb.Timeline.StateTimeline} */ (reader.readEnum());
      msg.setStateRegister(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Timeline.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Timeline.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Timeline} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Timeline.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeviceAlias();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInitialHourmeter();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getFinalHourmeter();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getInitialState();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getFinalState();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getInitialTime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFinalTime();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDurationTime();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getShiftDate();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getShift();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getStateRegister();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.pb.Timeline.StateTimeline = {
  UNKNOWN: 0,
  IN_PROGRESS: 1,
  CLOSED: 2
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.pb.Timeline.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Timeline} returns this
 */
proto.pb.Timeline.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string device_id = 2;
 * @return {string}
 */
proto.pb.Timeline.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Timeline} returns this
 */
proto.pb.Timeline.prototype.setDeviceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string device_alias = 3;
 * @return {string}
 */
proto.pb.Timeline.prototype.getDeviceAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Timeline} returns this
 */
proto.pb.Timeline.prototype.setDeviceAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional float initial_hourmeter = 4;
 * @return {number}
 */
proto.pb.Timeline.prototype.getInitialHourmeter = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Timeline} returns this
 */
proto.pb.Timeline.prototype.setInitialHourmeter = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float final_hourmeter = 5;
 * @return {number}
 */
proto.pb.Timeline.prototype.getFinalHourmeter = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Timeline} returns this
 */
proto.pb.Timeline.prototype.setFinalHourmeter = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional StateUnitGeneral initial_state = 6;
 * @return {!proto.pb.StateUnitGeneral}
 */
proto.pb.Timeline.prototype.getInitialState = function() {
  return /** @type {!proto.pb.StateUnitGeneral} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.pb.StateUnitGeneral} value
 * @return {!proto.pb.Timeline} returns this
 */
proto.pb.Timeline.prototype.setInitialState = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional StateUnitGeneral final_state = 7;
 * @return {!proto.pb.StateUnitGeneral}
 */
proto.pb.Timeline.prototype.getFinalState = function() {
  return /** @type {!proto.pb.StateUnitGeneral} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.pb.StateUnitGeneral} value
 * @return {!proto.pb.Timeline} returns this
 */
proto.pb.Timeline.prototype.setFinalState = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp initial_time = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.pb.Timeline.prototype.getInitialTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.pb.Timeline} returns this
*/
proto.pb.Timeline.prototype.setInitialTime = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.Timeline} returns this
 */
proto.pb.Timeline.prototype.clearInitialTime = function() {
  return this.setInitialTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Timeline.prototype.hasInitialTime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp final_time = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.pb.Timeline.prototype.getFinalTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.pb.Timeline} returns this
*/
proto.pb.Timeline.prototype.setFinalTime = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.Timeline} returns this
 */
proto.pb.Timeline.prototype.clearFinalTime = function() {
  return this.setFinalTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Timeline.prototype.hasFinalTime = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional float duration_time = 10;
 * @return {number}
 */
proto.pb.Timeline.prototype.getDurationTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Timeline} returns this
 */
proto.pb.Timeline.prototype.setDurationTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional google.protobuf.Timestamp shift_date = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.pb.Timeline.prototype.getShiftDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.pb.Timeline} returns this
*/
proto.pb.Timeline.prototype.setShiftDate = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.Timeline} returns this
 */
proto.pb.Timeline.prototype.clearShiftDate = function() {
  return this.setShiftDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Timeline.prototype.hasShiftDate = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Shift shift = 12;
 * @return {!proto.pb.Shift}
 */
proto.pb.Timeline.prototype.getShift = function() {
  return /** @type {!proto.pb.Shift} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.pb.Shift} value
 * @return {!proto.pb.Timeline} returns this
 */
proto.pb.Timeline.prototype.setShift = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional StateTimeline state_register = 13;
 * @return {!proto.pb.Timeline.StateTimeline}
 */
proto.pb.Timeline.prototype.getStateRegister = function() {
  return /** @type {!proto.pb.Timeline.StateTimeline} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.pb.Timeline.StateTimeline} value
 * @return {!proto.pb.Timeline} returns this
 */
proto.pb.Timeline.prototype.setStateRegister = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.UnitCurrentTimeline.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.UnitCurrentTimeline.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.UnitCurrentTimeline.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.UnitCurrentTimeline} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.UnitCurrentTimeline.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deviceAlias: jspb.Message.getFieldWithDefault(msg, 3, ""),
    currentTimeline: (f = msg.getCurrentTimeline()) && proto.pb.Timeline.toObject(includeInstance, f),
    state: jspb.Message.getFieldWithDefault(msg, 5, 0),
    hystoryShiftList: jspb.Message.toObjectList(msg.getHystoryShiftList(),
    proto.pb.Timeline.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.UnitCurrentTimeline}
 */
proto.pb.UnitCurrentTimeline.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.UnitCurrentTimeline;
  return proto.pb.UnitCurrentTimeline.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.UnitCurrentTimeline} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.UnitCurrentTimeline}
 */
proto.pb.UnitCurrentTimeline.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceAlias(value);
      break;
    case 4:
      var value = new proto.pb.Timeline;
      reader.readMessage(value,proto.pb.Timeline.deserializeBinaryFromReader);
      msg.setCurrentTimeline(value);
      break;
    case 5:
      var value = /** @type {!proto.pb.StateUnitGeneral} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 6:
      var value = new proto.pb.Timeline;
      reader.readMessage(value,proto.pb.Timeline.deserializeBinaryFromReader);
      msg.addHystoryShift(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.UnitCurrentTimeline.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.UnitCurrentTimeline.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.UnitCurrentTimeline} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.UnitCurrentTimeline.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeviceAlias();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCurrentTimeline();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.pb.Timeline.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getHystoryShiftList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.pb.Timeline.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pb.UnitCurrentTimeline.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.UnitCurrentTimeline} returns this
 */
proto.pb.UnitCurrentTimeline.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string device_id = 2;
 * @return {string}
 */
proto.pb.UnitCurrentTimeline.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.UnitCurrentTimeline} returns this
 */
proto.pb.UnitCurrentTimeline.prototype.setDeviceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string device_alias = 3;
 * @return {string}
 */
proto.pb.UnitCurrentTimeline.prototype.getDeviceAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.UnitCurrentTimeline} returns this
 */
proto.pb.UnitCurrentTimeline.prototype.setDeviceAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Timeline current_timeline = 4;
 * @return {?proto.pb.Timeline}
 */
proto.pb.UnitCurrentTimeline.prototype.getCurrentTimeline = function() {
  return /** @type{?proto.pb.Timeline} */ (
    jspb.Message.getWrapperField(this, proto.pb.Timeline, 4));
};


/**
 * @param {?proto.pb.Timeline|undefined} value
 * @return {!proto.pb.UnitCurrentTimeline} returns this
*/
proto.pb.UnitCurrentTimeline.prototype.setCurrentTimeline = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.UnitCurrentTimeline} returns this
 */
proto.pb.UnitCurrentTimeline.prototype.clearCurrentTimeline = function() {
  return this.setCurrentTimeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.UnitCurrentTimeline.prototype.hasCurrentTimeline = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StateUnitGeneral state = 5;
 * @return {!proto.pb.StateUnitGeneral}
 */
proto.pb.UnitCurrentTimeline.prototype.getState = function() {
  return /** @type {!proto.pb.StateUnitGeneral} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.pb.StateUnitGeneral} value
 * @return {!proto.pb.UnitCurrentTimeline} returns this
 */
proto.pb.UnitCurrentTimeline.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * repeated Timeline hystory_shift = 6;
 * @return {!Array<!proto.pb.Timeline>}
 */
proto.pb.UnitCurrentTimeline.prototype.getHystoryShiftList = function() {
  return /** @type{!Array<!proto.pb.Timeline>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.Timeline, 6));
};


/**
 * @param {!Array<!proto.pb.Timeline>} value
 * @return {!proto.pb.UnitCurrentTimeline} returns this
*/
proto.pb.UnitCurrentTimeline.prototype.setHystoryShiftList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.pb.Timeline=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Timeline}
 */
proto.pb.UnitCurrentTimeline.prototype.addHystoryShift = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.pb.Timeline, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.UnitCurrentTimeline} returns this
 */
proto.pb.UnitCurrentTimeline.prototype.clearHystoryShiftList = function() {
  return this.setHystoryShiftList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.UnitFinalize.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.UnitFinalize.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.UnitFinalize} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.UnitFinalize.toObject = function(includeInstance, msg) {
  var f, obj = {
    truck: (f = msg.getTruck()) && proto_unit_pb.Unit.toObject(includeInstance, f),
    hourmeter: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.UnitFinalize}
 */
proto.pb.UnitFinalize.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.UnitFinalize;
  return proto.pb.UnitFinalize.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.UnitFinalize} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.UnitFinalize}
 */
proto.pb.UnitFinalize.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_unit_pb.Unit;
      reader.readMessage(value,proto_unit_pb.Unit.deserializeBinaryFromReader);
      msg.setTruck(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHourmeter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.UnitFinalize.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.UnitFinalize.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.UnitFinalize} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.UnitFinalize.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTruck();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_unit_pb.Unit.serializeBinaryToWriter
    );
  }
  f = message.getHourmeter();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional Unit truck = 1;
 * @return {?proto.pb.Unit}
 */
proto.pb.UnitFinalize.prototype.getTruck = function() {
  return /** @type{?proto.pb.Unit} */ (
    jspb.Message.getWrapperField(this, proto_unit_pb.Unit, 1));
};


/**
 * @param {?proto.pb.Unit|undefined} value
 * @return {!proto.pb.UnitFinalize} returns this
*/
proto.pb.UnitFinalize.prototype.setTruck = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.UnitFinalize} returns this
 */
proto.pb.UnitFinalize.prototype.clearTruck = function() {
  return this.setTruck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.UnitFinalize.prototype.hasTruck = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float hourmeter = 2;
 * @return {number}
 */
proto.pb.UnitFinalize.prototype.getHourmeter = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.UnitFinalize} returns this
 */
proto.pb.UnitFinalize.prototype.setHourmeter = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.TimelineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.TimelineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.TimelineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TimelineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    timeline: (f = msg.getTimeline()) && proto.pb.Timeline.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.TimelineRequest}
 */
proto.pb.TimelineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.TimelineRequest;
  return proto.pb.TimelineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.TimelineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.TimelineRequest}
 */
proto.pb.TimelineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.Timeline;
      reader.readMessage(value,proto.pb.Timeline.deserializeBinaryFromReader);
      msg.setTimeline(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.TimelineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.TimelineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.TimelineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TimelineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeline();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.Timeline.serializeBinaryToWriter
    );
  }
};


/**
 * optional Timeline timeline = 1;
 * @return {?proto.pb.Timeline}
 */
proto.pb.TimelineRequest.prototype.getTimeline = function() {
  return /** @type{?proto.pb.Timeline} */ (
    jspb.Message.getWrapperField(this, proto.pb.Timeline, 1));
};


/**
 * @param {?proto.pb.Timeline|undefined} value
 * @return {!proto.pb.TimelineRequest} returns this
*/
proto.pb.TimelineRequest.prototype.setTimeline = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.TimelineRequest} returns this
 */
proto.pb.TimelineRequest.prototype.clearTimeline = function() {
  return this.setTimeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.TimelineRequest.prototype.hasTimeline = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.TimelineListRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.TimelineListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.TimelineListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.TimelineListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TimelineListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    truckList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    initialState: jspb.Message.getFieldWithDefault(msg, 2, 0),
    initialTime: (f = msg.getInitialTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.TimelineListRequest}
 */
proto.pb.TimelineListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.TimelineListRequest;
  return proto.pb.TimelineListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.TimelineListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.TimelineListRequest}
 */
proto.pb.TimelineListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addTruck(value);
      break;
    case 2:
      var value = /** @type {!proto.pb.StateUnitGeneral} */ (reader.readEnum());
      msg.setInitialState(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setInitialTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.TimelineListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.TimelineListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.TimelineListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TimelineListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTruckList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getInitialState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getInitialTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string truck = 1;
 * @return {!Array<string>}
 */
proto.pb.TimelineListRequest.prototype.getTruckList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.pb.TimelineListRequest} returns this
 */
proto.pb.TimelineListRequest.prototype.setTruckList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.pb.TimelineListRequest} returns this
 */
proto.pb.TimelineListRequest.prototype.addTruck = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.TimelineListRequest} returns this
 */
proto.pb.TimelineListRequest.prototype.clearTruckList = function() {
  return this.setTruckList([]);
};


/**
 * optional StateUnitGeneral initial_state = 2;
 * @return {!proto.pb.StateUnitGeneral}
 */
proto.pb.TimelineListRequest.prototype.getInitialState = function() {
  return /** @type {!proto.pb.StateUnitGeneral} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.pb.StateUnitGeneral} value
 * @return {!proto.pb.TimelineListRequest} returns this
 */
proto.pb.TimelineListRequest.prototype.setInitialState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp initial_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.pb.TimelineListRequest.prototype.getInitialTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.pb.TimelineListRequest} returns this
*/
proto.pb.TimelineListRequest.prototype.setInitialTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.TimelineListRequest} returns this
 */
proto.pb.TimelineListRequest.prototype.clearInitialTime = function() {
  return this.setInitialTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.TimelineListRequest.prototype.hasInitialTime = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.TimelinesShiftRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.TimelinesShiftRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.TimelinesShiftRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TimelinesShiftRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    shiftDate: (f = msg.getShiftDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    shift: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.TimelinesShiftRequest}
 */
proto.pb.TimelinesShiftRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.TimelinesShiftRequest;
  return proto.pb.TimelinesShiftRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.TimelinesShiftRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.TimelinesShiftRequest}
 */
proto.pb.TimelinesShiftRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setShiftDate(value);
      break;
    case 2:
      var value = /** @type {!proto.pb.Shift} */ (reader.readEnum());
      msg.setShift(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.TimelinesShiftRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.TimelinesShiftRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.TimelinesShiftRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TimelinesShiftRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShiftDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getShift();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp shift_date = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.pb.TimelinesShiftRequest.prototype.getShiftDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.pb.TimelinesShiftRequest} returns this
*/
proto.pb.TimelinesShiftRequest.prototype.setShiftDate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.TimelinesShiftRequest} returns this
 */
proto.pb.TimelinesShiftRequest.prototype.clearShiftDate = function() {
  return this.setShiftDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.TimelinesShiftRequest.prototype.hasShiftDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Shift shift = 2;
 * @return {!proto.pb.Shift}
 */
proto.pb.TimelinesShiftRequest.prototype.getShift = function() {
  return /** @type {!proto.pb.Shift} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.pb.Shift} value
 * @return {!proto.pb.TimelinesShiftRequest} returns this
 */
proto.pb.TimelinesShiftRequest.prototype.setShift = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.TimelineFinalizeShiftRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.TimelineFinalizeShiftRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.TimelineFinalizeShiftRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.TimelineFinalizeShiftRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TimelineFinalizeShiftRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    truckList: jspb.Message.toObjectList(msg.getTruckList(),
    proto.pb.UnitFinalize.toObject, includeInstance),
    shift: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.TimelineFinalizeShiftRequest}
 */
proto.pb.TimelineFinalizeShiftRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.TimelineFinalizeShiftRequest;
  return proto.pb.TimelineFinalizeShiftRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.TimelineFinalizeShiftRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.TimelineFinalizeShiftRequest}
 */
proto.pb.TimelineFinalizeShiftRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.UnitFinalize;
      reader.readMessage(value,proto.pb.UnitFinalize.deserializeBinaryFromReader);
      msg.addTruck(value);
      break;
    case 2:
      var value = /** @type {!proto.pb.Shift} */ (reader.readEnum());
      msg.setShift(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.TimelineFinalizeShiftRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.TimelineFinalizeShiftRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.TimelineFinalizeShiftRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TimelineFinalizeShiftRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTruckList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pb.UnitFinalize.serializeBinaryToWriter
    );
  }
  f = message.getShift();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * repeated UnitFinalize truck = 1;
 * @return {!Array<!proto.pb.UnitFinalize>}
 */
proto.pb.TimelineFinalizeShiftRequest.prototype.getTruckList = function() {
  return /** @type{!Array<!proto.pb.UnitFinalize>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.UnitFinalize, 1));
};


/**
 * @param {!Array<!proto.pb.UnitFinalize>} value
 * @return {!proto.pb.TimelineFinalizeShiftRequest} returns this
*/
proto.pb.TimelineFinalizeShiftRequest.prototype.setTruckList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.UnitFinalize=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.UnitFinalize}
 */
proto.pb.TimelineFinalizeShiftRequest.prototype.addTruck = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.UnitFinalize, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.TimelineFinalizeShiftRequest} returns this
 */
proto.pb.TimelineFinalizeShiftRequest.prototype.clearTruckList = function() {
  return this.setTruckList([]);
};


/**
 * optional Shift shift = 2;
 * @return {!proto.pb.Shift}
 */
proto.pb.TimelineFinalizeShiftRequest.prototype.getShift = function() {
  return /** @type {!proto.pb.Shift} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.pb.Shift} value
 * @return {!proto.pb.TimelineFinalizeShiftRequest} returns this
 */
proto.pb.TimelineFinalizeShiftRequest.prototype.setShift = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.TimelineResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.TimelineResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.TimelineResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TimelineResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    timeline: (f = msg.getTimeline()) && proto.pb.Timeline.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.TimelineResponse}
 */
proto.pb.TimelineResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.TimelineResponse;
  return proto.pb.TimelineResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.TimelineResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.TimelineResponse}
 */
proto.pb.TimelineResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.Timeline;
      reader.readMessage(value,proto.pb.Timeline.deserializeBinaryFromReader);
      msg.setTimeline(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.TimelineResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.TimelineResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.TimelineResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TimelineResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeline();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.Timeline.serializeBinaryToWriter
    );
  }
};


/**
 * optional Timeline timeline = 1;
 * @return {?proto.pb.Timeline}
 */
proto.pb.TimelineResponse.prototype.getTimeline = function() {
  return /** @type{?proto.pb.Timeline} */ (
    jspb.Message.getWrapperField(this, proto.pb.Timeline, 1));
};


/**
 * @param {?proto.pb.Timeline|undefined} value
 * @return {!proto.pb.TimelineResponse} returns this
*/
proto.pb.TimelineResponse.prototype.setTimeline = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.TimelineResponse} returns this
 */
proto.pb.TimelineResponse.prototype.clearTimeline = function() {
  return this.setTimeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.TimelineResponse.prototype.hasTimeline = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.TimelineListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.TimelineListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.TimelineListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TimelineListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.TimelineListResponse}
 */
proto.pb.TimelineListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.TimelineListResponse;
  return proto.pb.TimelineListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.TimelineListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.TimelineListResponse}
 */
proto.pb.TimelineListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.TimelineListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.TimelineListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.TimelineListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TimelineListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.pb.TimelineListResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.TimelineListResponse} returns this
 */
proto.pb.TimelineListResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.pb.TimelineListResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.TimelineListResponse} returns this
 */
proto.pb.TimelineListResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.TimelinesShiftResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.TimelinesShiftResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.TimelinesShiftResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.TimelinesShiftResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TimelinesShiftResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    shiftDate: (f = msg.getShiftDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    currentTimelineList: jspb.Message.toObjectList(msg.getCurrentTimelineList(),
    proto.pb.UnitCurrentTimeline.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.TimelinesShiftResponse}
 */
proto.pb.TimelinesShiftResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.TimelinesShiftResponse;
  return proto.pb.TimelinesShiftResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.TimelinesShiftResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.TimelinesShiftResponse}
 */
proto.pb.TimelinesShiftResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setShiftDate(value);
      break;
    case 2:
      var value = new proto.pb.UnitCurrentTimeline;
      reader.readMessage(value,proto.pb.UnitCurrentTimeline.deserializeBinaryFromReader);
      msg.addCurrentTimeline(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.TimelinesShiftResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.TimelinesShiftResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.TimelinesShiftResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TimelinesShiftResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShiftDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCurrentTimelineList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.pb.UnitCurrentTimeline.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp shift_date = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.pb.TimelinesShiftResponse.prototype.getShiftDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.pb.TimelinesShiftResponse} returns this
*/
proto.pb.TimelinesShiftResponse.prototype.setShiftDate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.TimelinesShiftResponse} returns this
 */
proto.pb.TimelinesShiftResponse.prototype.clearShiftDate = function() {
  return this.setShiftDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.TimelinesShiftResponse.prototype.hasShiftDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated UnitCurrentTimeline current_timeline = 2;
 * @return {!Array<!proto.pb.UnitCurrentTimeline>}
 */
proto.pb.TimelinesShiftResponse.prototype.getCurrentTimelineList = function() {
  return /** @type{!Array<!proto.pb.UnitCurrentTimeline>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.UnitCurrentTimeline, 2));
};


/**
 * @param {!Array<!proto.pb.UnitCurrentTimeline>} value
 * @return {!proto.pb.TimelinesShiftResponse} returns this
*/
proto.pb.TimelinesShiftResponse.prototype.setCurrentTimelineList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pb.UnitCurrentTimeline=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.UnitCurrentTimeline}
 */
proto.pb.TimelinesShiftResponse.prototype.addCurrentTimeline = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pb.UnitCurrentTimeline, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.TimelinesShiftResponse} returns this
 */
proto.pb.TimelinesShiftResponse.prototype.clearCurrentTimelineList = function() {
  return this.setCurrentTimelineList([]);
};


/**
 * @enum {number}
 */
proto.pb.StateUnitGeneral = {
  UNKNOWN_STATE: 0,
  UPLOAD: 1,
  DOWNLOAD: 2,
  TO_UPLOAD: 3,
  TO_DOWNLOAD: 4,
  WAITING: 5,
  QUEUE: 6,
  MANTO: 7,
  STANDBY: 8,
  INSPECTION: 9,
  LOAD_FUEL: 10,
  LOAD_WATER: 11,
  OPERATIONAL: 12,
  DELAY_OPERATIONAL: 13
};

goog.object.extend(exports, proto.pb);
