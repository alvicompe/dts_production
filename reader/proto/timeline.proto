syntax = "proto3";

package pb;

option go_package = "../pb";
import "google/protobuf/timestamp.proto";
import "proto/cycle.proto";
enum StateUnitGeneral {
    UNKNOWN_STATE = 0;
    UPLOAD = 1;
    DOWNLOAD = 2;
    TO_UPLOAD = 3;
    TO_DOWNLOAD = 4;
    WAITING = 5;
    QUEUE = 6;
    MANTO = 7;
    STANDBY = 8;
    INSPECTION = 9;
    LOAD_FUEL = 10;
    LOAD_WATER = 11;
    OPERATIONAL = 12;
    DELAY_OPERATIONAL = 13;
}

message Timeline{
    enum StateTimeline{
        UNKNOWN = 0;
        IN_PROGRESS = 1;
        CLOSED = 2;
    }
    string id = 1;
    string device_id = 2;
    string device_alias = 3;
    float initial_hourmeter = 4;
    float final_hourmeter = 5;
    StateUnitGeneral initial_state = 6;
    StateUnitGeneral final_state = 7;
    google.protobuf.Timestamp initial_time = 8;
    google.protobuf.Timestamp final_time = 9;
    float duration_time = 10;
    google.protobuf.Timestamp shift_date = 11;
    Shift shift = 12;
    StateTimeline state_register = 13;
     
}
message UnitCurrentTimeline{
    string id = 1;
    string device_id = 2;
    string device_alias = 3;
    Timeline current_timeline = 4;
    StateUnitGeneral state = 5;
    repeated Timeline hystory_shift = 6;
}

message TimelineRequest{
    Timeline timeline = 1;
}
message TimelineListRequest{
    repeated string truck = 1;
    StateUnitGeneral initial_state = 2;
    google.protobuf.Timestamp initial_time = 3;

}
message TimelinesShiftRequest{
    google.protobuf.Timestamp shift_date = 1;
    Shift shift = 2;
}
message TimelineResponse{
    Timeline timeline = 1;
}
message TimelineListResponse{
    bool success = 1;
    string message = 2;
}

message TimelinesShiftResponse{
    google.protobuf.Timestamp shift_date = 1;
    repeated  UnitCurrentTimeline current_timeline =2;
}
service TimelineService {
    rpc CreateTimeline(TimelineRequest) returns (TimelineResponse) {};
    rpc RetrieveTimeline(TimelineRequest) returns (TimelineResponse) {};
    rpc UpdateTimeline(TimelineRequest) returns (TimelineResponse) {};
    rpc DeleteTimeline(TimelineRequest) returns (TimelineResponse) {};
    rpc RetrieveTimelinesShift(TimelinesShiftRequest) returns (TimelinesShiftResponse) {};
    rpc UpdateTimelineTruckList(TimelineListRequest) returns (TimelineListResponse) {};
  }
  
  